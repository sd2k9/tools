#!/bin/bash
# Function: Merges a branch and performs cleanup afterwards
#           All steps are queried for continue

# ------------------------------------------------------------------------------

# *** Settings ***
# Treat uninitialised variable as error and exit script
set -u
# Test mode: True when defined (only echo commands)
TESTMODE=

# ------------------------------------------------------------------------------

# *** Functions ***
# Include common functions
source ${BASH_SOURCE[0]%/*}/../bash-functions

function help_text() {
cat<<EOF
Merges a branch a performs cleanup afterwards.
When not specifying targetbranch, change to the target branch
yourself before execution.

Steps
- Merge branch
- Push
- Delete local branch name
- Delete remote brach name

Usage: $(basename $0) [targetbranch] branchname
* targetbranch: The destination branch for the merge
                Use current branch when not given
* branchname: The branch to merge and cleanup

EOF
}

# ------------------------------------------------------------------------------

# *** Rudimentary command line parsing
# Command line arguments
BRANCHNAME=""
TARGETBRANCH=""


# Parse command line for options
until [ -z "${1-}" ]
 do
   # echo "Processing parameter of: '$1'"
   case $1 in
   --help | -h) # Help
      help_text
      exit
      ;;
   *) # Branch and Target Name
       if [[ -n "$BRANCHNAME" ]]; then
	   if [[ -n "$TARGETBRANCH" ]]; then
	       echo "Only one branch name allowed!"
	       exit 1
	   else
	       # Optional target branch name is given
	       TARGETBRANCH="$BRANCHNAME"
	       BRANCHNAME="$1"
	   fi
       fi
       BRANCHNAME="$1"
      ;;
   esac
   shift
 done

# No branch name supplied
if [ -z "$BRANCHNAME" ]; then
    echo "Wrong number of command line options!"
    echo
    help_text
    exit 1
fi


# ------------------------------------------------------------------------------

# *** Now execute actions

if [[ -n "$TARGETBRANCH" ]]; then
    echo
    echo "Change to destination branch $TARGETBRANCH ..."
    exec_tool_confirm git checkout $TARGETBRANCH
fi

echo
echo "Merge branch $BRANCHNAME ..."
exec_tool_confirm git merge --no-ff $BRANCHNAME

echo
echo "Push ..."
exec_tool_confirm git push

echo
echo "Delete local branch $BRANCHNAME ..."
exec_tool_confirm git branch --delete $BRANCHNAME

echo
echo "Delete remote brach $BRANCHNAME ..."
exec_tool_confirm git push origin --delete $BRANCHNAME


# *** Done
echo
echo "Done"
exit
